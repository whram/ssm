<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--spring中的依赖注入
        依赖注入：
            Dependency Injection
        IOC的作用：
            降低程序间的耦合（依赖关系）
        依赖关系管理:
            以后都交给spring来维护
            在当前类需要用到其他类的对象，由spring为我们提供，我们只需要在配置文件中说明
        依赖关系的维护就称为依赖注入
            依赖注入：
                能注入的数据有三类：
                    基本类型和String
                    其他bean类型（在配置文件中bean或者注解配置过的bean）
                    其他复杂类型/集合类型
                注入方式有三种
                    使用构造函数提供
                    set方法提供
                    使用注解提供
    -->

<!--构造函数注入
    适用的标签：constructor-arg
    标签出现的位置：bean标签的内部
    标签中的属性：
        type：用于指定要注入的数据的数据类型，该数据类型也是构造函数中某个或某些参数的类型
        index：用于指定要注入的数据给构造函数中指定的参数的索引位置，索引位置从0开始
        name：用于指定给构造函数中指定名称的参数赋值     常用
        ==================以上三个用于指定给构造函数中哪个参数赋值====================
        value：用于提供基本类型和String类型的数据
        ref：用于指定其他的bean类型，值得就是在spring的ioc核心容器中出现过的bean对象
    优势：
        在获取bean对象时，注入数据是必须操作，否则对象无法创建成功。
    弊端：
        改变了bean对象的实例化方式，使我们在创建对象时，如果用不到这些数据，也必须提供。
    -->
    <bean id="accountService" class="com.reacher.service.impl.AccountServiceImpl">
        <constructor-arg name="name" value="张三"></constructor-arg>
        <constructor-arg name="age" value="18"></constructor-arg>
        <constructor-arg name="birthday" ref="now"></constructor-arg>
    </bean>
    <!--配置一个日期对象 可通过ref引用-->
    <bean id="now" class="java.util.Date"></bean>

<!--set方法注入-->
    <!--
        涉及的标签：property
        出现位置：bean标签的内部
        标签的属性：
            name：用于指定注入时所调用的set方法名称
            value：用于提供基本类型和String类型的数据
            ref：用于指定其他的bean类型，值得就是在spring的ioc核心容器中出现过的bean对象
        优劣与构造函数注入方法相反
    -->
    <bean id="accountService2" class="com.reacher.service.impl.AccountServiceImpl2">
        <property name="name" value="test"></property>
        <property name="age" value="20"></property>
        <property name="birthday" ref="now"></property>
    </bean>

<!--其他复杂类型/集合类型-->
    <!--
        用于给List结构集合注入的标签：
            list array set
        用于给Map结构集合注入的标签：
            map props
        结构相同，标签可以互换
    -->
    <bean id="accountService3" class="com.reacher.service.impl.AccountServiceImpl3">
        <property name="myStrs">
            <array>
                <value>AAA</value>
                <value>BBB</value>
                <value>CCC</value>
            </array>
        </property>
        <property name="myList">
            <array>
                <value>AAA</value>
                <value>BBB</value>
                <value>CCC</value>
            </array>
        </property>
        <property name="mySet">
            <array>
                <value>AAA</value>
                <value>BBB</value>
                <value>CCC</value>
            </array>
        </property>
        <property name="myMap">
            <map>
                <entry key="testA" value="aaa"></entry>
                <entry key="testB">
                    <value>bbb</value>
                </entry>
            </map>
        </property>
        <property name="myProps">
            <props>
                <prop key="testC">ccc</prop>
                <prop key="testD">ddd</prop>
            </props>
        </property>
    </bean>

</beans>